name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
        include:
          - rust: stable
            all_features: "--features alloc" # "alloc"
          - rust: nightly
            all_features: "--all-features" # "alloc" + "nightly"
    steps:
    - uses: actions/checkout@v2
    - name: Install Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt

    - name: Check format
      run: cargo fmt -- --check --files-with-diff

    - name: Build with default settings
      run: cargo build --verbose
    - name: Build with no features
      run: cargo build --verbose --no-default-features
    - name: Build with all features
      run: cargo build --verbose ${{ matrix.all_features }}

    - name: Run tests
      run: cargo test --verbose

  miri: # https://github.com/rust-lang/miri
    name: Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: miri
          override: true
      - run: rustup component add miri
      - uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --all-features
